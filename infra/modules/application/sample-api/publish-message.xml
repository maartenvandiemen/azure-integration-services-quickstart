<policies>
    <inbound>
        <base />

        <!-- Validate that the body complies to the schema -->
        <validate-content unspecified-content-type-action="prevent" max-size="102400" size-exceeded-action="prevent">
            <content type="application/json" validate-as="json" action="prevent" />
        </validate-content>
        
        <!-- Forward the request to the aisquick-sample topic on the service bus -->
        <set-backend-service backend-id="service-bus" />
        <rewrite-uri template="aisquick-sample/messages" copy-unmatched-params="false" />
        <authentication-managed-identity resource="https://servicebus.azure.net" />

        <!-- Add message ID to body -->
        <set-variable name="message-id" value="@(Guid.NewGuid().ToString())" />
        <set-body>@{
            var body = context.Request.Body.As<JObject>();
            body["id"] = context.Variables.GetValueOrDefault<string>("message-id");
            return body.ToString();
        }</set-body>

        <!-- 
            Add Diagnostic-Id header to correlate the APIM and Service Bus logging.
            See https://learn.microsoft.com/en-us/azure/service-bus-messaging/service-bus-end-to-end-tracing for more information.
        -->
        <set-header name="Diagnostic-Id" exists-action="override">
            <value>@(context.Request.Headers.GetValueOrDefault("Request-Id", context.RequestId.ToString("N")))</value>
        </set-header>
    </inbound>

    <backend>
        <base />
    </backend>

    <outbound>
        <base />

        <!-- Return the generated message ID if the message was successfully published -->
        <choose>
            <when condition="@(context.Response.StatusCode == 201)">
                <set-header name="Content-Type" exists-action="override">
                    <value>application/json</value>
                </set-header>
                <set-body template="liquid">
                {
                    "id": "{{context.Variables["message-id"]}}"
                }
                </set-body>
            </when>
        </choose>
    </outbound>

    <on-error>
        <base />
    </on-error>
</policies>