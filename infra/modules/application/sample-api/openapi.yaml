openapi: 3.0.1
info:
  title: AISQuick Sample
  description: AISQuick Sample API
  version: '1.0'
paths:
  /messages:
    post:
      summary: Publish Message
      description: Publish Message
      operationId: publish-message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/publishMessageRequest'
            example:
              message: Hello world!
      responses:
        '201':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/publishMessageResponse'
              example:
                id: 8599d9e6-24cf-4d65-a79a-9ccb085987df
  '/blobs/{id}':
    get:
      summary: Get Blob
      description: Get Blob
      operationId: get-blob
      parameters:
        - name: id
          in: path
          description: Id of the Blob
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getBlobResponse'
              example:
                id: 8599d9e6-24cf-4d65-a79a-9ccb085987df
                message: Hello world!
  '/table-entities/{id}':
    get:
      summary: Get Table Entity
      description: Get Table Entity
      operationId: get-table-entity
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getTableEntityResponse'
              example:
                PartitionKey: aisquick-sample
                RowKey: 8599d9e6-24cf-4d65-a79a-9ccb085987df
                Message: Hello world!
components:
  schemas:
    getBlobResponse:
      required:
        - id
        - message
      type: object
      properties:
        id:
          type: string
          format: uuid
        message:
          type: string
    getTableEntityResponse:
      required:
        - PartitionKey
        - RowKey
        - Message
      type: object
      properties:
        PartitionKey:
          type: string
        RowKey:
          type: string
          format: uuid
        Message:
          type: string
    publishMessageRequest:
      required:
        - message
      type: object
      properties:
        message:
          type: string
    publishMessageResponse:
      required:
        - id
      type: object
      properties:
        id:
          type: string
          format: uuid
  securitySchemes:
    apiKeyHeader:
      type: apiKey
      name: Ocp-Apim-Subscription-Key
      in: header
    apiKeyQuery:
      type: apiKey
      name: subscription-key
      in: query
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
